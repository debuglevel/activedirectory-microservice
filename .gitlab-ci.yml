image: docker:latest

services:
  - docker:dind
  
stages:
  - build

# No explicit test stage is needed, as "gradle build" does already run the "test" task
#test:
#  stage: build
#  image: alpine:3.7
#  script:
#    - ...

build:
  stage: build
  image: gradle:4.8-jdk8-alpine
  script:
    - gradle build
  artifacts:
    paths:
      # use only shadowed jars
      - "build/libs/*-all.jar"
      - "build/distributions/*shadow*.tar"

      # reports (e.g. about failed tests)
      - "build/reports"

build-docker-master:
  stage: build
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY 
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master

build-docker-branches:
  stage: build
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  except:
    - master
